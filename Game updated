def setup():
    size(640, 480)
playing_pass = False
leaderboard_pass = False
pause_pass = False
menu_screen = True
death = False

def draw():
    menu()
    
def menu():
    background("#6EC5E9")
    draw_button("PLAY", 170, 190, 300, 80, (239, 201, 239))
    fill(255)
    triangle(410, 210, 410, 250, 450, 230)
    draw_button("LEADERBOARD", 170, 300, 300, 80, (239, 201, 239))
    play()
    leaderboard()

def draw_button(button_text, button_x, button_y, button_width, button_height, (r, g, b)):
    global playing_pass, leaderboard_pass, pause_pass
    noStroke()
    
    rect(button_x, button_y, button_width, button_height)
    if mouseX in range(button_x, button_x + button_width) and mouseY in range(button_y, button_y+button_height):
        fill(r - 50, g - 50, b - 50)
        if mousePressed:
            if button_text == "PLAY" or button_text == "RESTART":
                playing_pass = True
                menu_screen = False
            elif button_text == "LEADERBOARD":
                leaderboard_pass = True 
            elif button_text == "":
                pause_pass = True
            elif button_text == "EXIT":
                menu_screen = True
                playing_pass = False
            elif button_text == "RESUME":
                pause_pass = False

    else:
        fill(r, g, b)

    rect(button_x, button_y, button_width, button_height)
    
    fill(255)
    textSize(30)
    textAlign(CENTER,CENTER)
    pushMatrix()
    translate(button_x, button_y)
    text(button_text, button_width/2, button_height/2)
    popMatrix()
    
fish_x = 320
fish_y = 240
fish_size_width = 50
fish_size_height = 50
def fish_movement():
    global fish_x, fish_y, fish_size_width, fish_size_height
    fill(0)
    ellipse(fish_x, fish_y, fish_size_width, fish_size_height)
    if fish_x < -25:
        fish_x = 665
    elif fish_x > 665:
        fish_x = -25
    elif fish_y < -25:
        fish_y = 510
    elif fish_y > 510:
        fish_y = -25
    
def keyPressed():
    global fish_x
    global fish_y
    if key == CODED:
        if keyCode == UP:
            fish_y -= 5
        elif keyCode == DOWN:
            fish_y += 5
        elif keyCode == RIGHT:
            fish_x += 5
        elif keyCode == LEFT:
            fish_x -= 5



def play():
    global fish_x, fish_y, fish_movement
    if playing_pass == True:
        background(110, 197, 233)
        fill(245, 225, 125)
        rect(0, 400, 648, 80)    
        fill(110, 197, 233, 100)
        rect(0, 0, 640, 480)
        fish_movement()
        draw_button("", 570, 30, 50, 50, (230, 230, 0))
        fill(0)
        rect(580, 40, 10, 30)
        rect(600, 40, 10, 30)
        other_fish()
        pause()
        death_screen()
        
        
#leaderboard() and pause() must be defined like below
def leaderboard():
    if leaderboard_pass == True:
        background(0, 255, 255)
def pause():
    if pause_pass == True:
        fill(0, 240, 89, 150)
        rect(20, 20, 600, 440)
        draw_button("RESUME", 400, 300, 150, 100, (255, 0, 0))
        draw_button("EXIT", 100, 300, 100, 100, (255, 0, 0))

o_fish_x = 641
o_fish_width = random(5, 20)
o_fish_height = random(5, 20)
o_fish_y = random(o_fish_width + 10, 480-o_fish_width)
points = 0
update_points = 0
score = 0
def other_fish():
    global o_fish_x, o_fish_y, o_fish_width, o_fish_height, points, update_points, fish_size_width, fish_size_height, death_pass, score ,death
    ellipse(o_fish_x, o_fish_y, o_fish_width, o_fish_height)
    o_fish_x += 2
    if o_fish_x > 640:
        o_fish_x = 0
        o_fish_y = 240
        o_fish_height = random(5, 100)
        o_fish_width = o_fish_height + random(1, 20)
    
    if fish_size_height > o_fish_height:
        if o_fish_x in range(int(fish_x - fish_size_width/2 + o_fish_width/2), int(fish_x + fish_size_width/2 - o_fish_width/2)) and o_fish_y in range(int(fish_y - fish_size_height/2 + o_fish_height/2), int(fish_y + fish_size_height/2 - o_fish_height/2)):
            points += 1
    elif fish_size_height + 5 < o_fish_height:
        if fish_x in range(int(o_fish_x - o_fish_x/2 + fish_size_width/2.5), int(o_fish_x + o_fish_width/2 - fish_size_width/2.5)) and fish_x in range(int(o_fish_y - o_fish_y/2 + fish_size_height/2.5), int(o_fish_y + o_fish_y/2 - fish_size_height/2.5)):
            death = True

    if points != update_points:
        score += int(o_fish_width + o_fish_height)/10
        fish_size_width += (o_fish_width + o_fish_height)/10
        fish_size_height += (o_fish_width + o_fish_height)/10
        o_fish_x = 1000
        update_points = points
    show_score()

def death_screen():
    if death == True:
        background("#6EC5E9")
        global score
    
        textSize(60)
        fill(0)
        textAlign(CENTER, CENTER)
        text("YOU DIED!", 320, 100)
        textSize(30)
        text("YOUR SCORE: " + str(score), 320, 200)
        
        draw_button("EXIT", 120, 300, 140, 140, (239, 201, 239))
        draw_button("RESTART", 400, 300, 140, 140, (239, 201, 239))
        
    
    
    
def show_score():
    global score
    textSize(25)
    text("Score: " + str(score),80,50)
